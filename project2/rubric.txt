PROJECT SPECIFICATION
Object Classification

Required Files and Tests

    CRITERIA
    MEETS SPECIFICATIONS
    Have all project files been included with the submission?

    The project submission contains the project notebook, called “dlnd_image_classification.ipynb”.

    Have all the unit tests in the project passed?

    All the unit tests in project have passed.

Preprocessing

    CRITERIA
    MEETS SPECIFICATIONS
    Does the normalize function correctly normalize image data?

    The normalize function normalizes image data in the range of 0 to 1, inclusive.

    Does the project correctly one hot encode labels?

    The one_hot_encode function encodes labels to one-hot encodings.

Neural Network Layers

    CRITERIA
    MEETS SPECIFICATIONS
    Does the project use the correct input tensors?

    The neural net inputs functions have all returned the correct TF Placeholder.

    Does the project create one or more convolutional and max pooling layers without using contrib functions?

    The conv2d_maxpool function applies convolution and max pooling to a layer.

    The convolutional layer should use a nonlinear activation.

    This function shouldn’t use any of the tensorflow functions in the tf.contrib or tf.layers namespace.

    Does the project create a flatten layer?

    The flatten function flattens a tensor without affecting the batch size.

    Does the project create one or more fully connect layers?

    The fully_conn function creates a fully connected layer with a nonlinear activation.

    Does the project create a output layer?

    The output function creates an output layer with a linear activation.

Neural Network Architecture

    CRITERIA
    MEETS SPECIFICATIONS
    Does the project create a convolutional model that predicts on the data?

    The conv_net function creates a convolutional model and returns the logits. Dropout should be applied to alt least one layer.

Neural Network Training

    CRITERIA
    MEETS SPECIFICATIONS
    Does the neural network optimize correctly?

    The train_neural_network function optimizes the neural network.

    Does the project print loss and validation accuracy?

    The print_stats function prints loss and validation accuracy.

    Does the project use reasonable hyperparameters?

    The hyperparameters have been set to reasonable numbers.

    Does the neural network achieve a good accuracy for the methods available?

    The neural network validation and test accuracy are similar. Their accuracies are greater than 50%.

    Suggestions to Make Your Project Stand Out!
    Most of the neural network layers can be solved using the namespace of tf.contrib or tf.layers. If you want a challenge, try creating all the layers using only the TensorFlow core functions.
